{"componentChunkName":"component---src-templates-reference-page-js","path":"/reference/tutorial","result":{"data":{"markdownRemark":{"html":"<h2>Tutorial: Get Started with Creative Machine</h2>\n<h3>Introduction</h3>\n<p>Creative Machine is a Machine Learning library for <a href=\"https://processing.org/\">Processing</a>. This library aims to provide a user-friendly Machine Learning features for beginners in Machine Learning.</p>\n<h3>Let's get started</h3>\n<p>After you downloaded Creative Machine in your Processing application following the <a href=\"../download\">Download</a> instruction, you should include this one line of code on the top of your sketch.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">ml<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now you are ready to play with different Machine Learning models in your Processing application!</p>\n<p>Let's get started with a simple object detection model. Object detection is a Machine Learning task to detect objects from an image with their labels and bounding boxes that indicates their locations. You can create an object detector by loading one of the built-in models in Creative Machine:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">ml<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// load Creative Machine</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// create an Object Detector</span>\n    <span class=\"token comment\">// You can choose different models by specifying different names.</span>\n    <span class=\"token comment\">// * Available model list</span>\n    <span class=\"token comment\">// - SSD Models: \"openimages_ssd\", \"coco_ssd\", \"voc_ssd\"</span>\n    <span class=\"token comment\">// - YOLO Models: \"coco_yolo\", \"voc_yolo\"</span>\n    <span class=\"token class-name\">ObjectDetector</span> detector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectDetector</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"coco_ssd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now we need an input image that contains some objects. Here is a photo of a dog, bike, and car. You can download this image from <a href=\"https://github.com/jjeongin/creative-machine/blob/master/examples/ObjectDetectorExample/data/dog_bike_car.jpeg\">here</a> or use your own image.</p>\n<p>Processing, by its default, detects images from data folder under your sketh directory. Create a new folder called <code class=\"language-text\">data</code> under your sketch folder and move your input image under the data folder. Then, you can load the image like the following code. (Visit <a href=\"https://processing.org/reference/loadImage_.html\">Processing documentation</a> for more detailed instruction about how to load an image.)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">PImage</span> img <span class=\"token operator\">=</span> <span class=\"token function\">loadImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dog_bike_car.jpeg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We are now ready to run our object detector! Running the detector is as simple as one line of code:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">MLObject</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> output <span class=\"token operator\">=</span> detector<span class=\"token punctuation\">.</span><span class=\"token function\">detect</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>All set! Now your whole code will look similar to this:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">ml<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// load Creative Machine</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// create an Object Detector</span>\n    <span class=\"token comment\">// You can choose different models by specifying different names.</span>\n    <span class=\"token comment\">// * Available model list</span>\n    <span class=\"token comment\">// - SSD Models: \"openimages_ssd\", \"coco_ssd\", \"voc_ssd\"</span>\n    <span class=\"token comment\">// - YOLO Models: \"coco_yolo\", \"voc_yolo\"</span>\n    <span class=\"token class-name\">ObjectDetector</span> detector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectDetector</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"coco_ssd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// load input image (this image should be under the \"data\" folder that is under your sketch folder)</span>\n    <span class=\"token class-name\">PImage</span> img <span class=\"token operator\">=</span> <span class=\"token function\">loadImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dog_bike_car.jpeg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// run object detection</span>\n    <span class=\"token class-name\">MLObject</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> output <span class=\"token operator\">=</span> detector<span class=\"token punctuation\">.</span><span class=\"token function\">detect</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This is it. Click the Run button on Processing and you have now successfully run the object detection in Processing.</p>\n<p>Now what? Visit our <a href=\"models/object-detector\">Object Detector</a> documentation to see what you can do with the output returned by the detector.</p>","frontmatter":{"slug":"/reference/tutorial"}}},"pageContext":{"slug":"/reference/tutorial"}},"staticQueryHashes":["3159585216"]}